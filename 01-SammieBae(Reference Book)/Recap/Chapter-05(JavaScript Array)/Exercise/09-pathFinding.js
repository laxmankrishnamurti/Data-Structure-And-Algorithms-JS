let board = `%e%%%%%%%%%\n%...%.%...%\n%.%.%.%.%%%\n%.%.......%\n%.%%%%.%%.%\n%.%.....%.%\n%%%%%%%%%x%`;

let rows = board.split("\n");

/*
rows ::  [
  '%e%%%%%%%%%',
  '%...%.%...%',
  '%.%.%.%.%%%',
  '%.%.......%',
  '%.%%%%.%%.%',
  '%.%.....%.%',
  '%%%%%%%%%x%'
]
*/

function generateColumnArr(arr) {
  return arr.split("");
}

const mazeMatrix = rows.map(generateColumnArr);

/*mazeMatrix ::  [
  [
    '%', 'e', '%', '%',
    '%', '%', '%', '%',
    '%', '%', '%'
  ],
  [
    '%', '.', '.', '.',
    '%', '.', '%', '.',
    '.', '.', '%'
  ],
  [
    '%', '.', '%', '.',
    '%', '.', '%', '.',
    '%', '%', '%'
  ],
  [
    '%', '.', '%', '.',
    '.', '.', '.', '.',
    '.', '.', '%'
  ],
  [
    '%', '.', '%', '%',
    '%', '%', '.', '%',
    '%', '.', '%'
  ],
  [
    '%', '.', '%', '.',
    '.', '.', '.', '.',
    '%', '.', '%'
  ],
  [
    '%', '%', '%', '%',
    '%', '%', '%', '%',
    '%', 'x', '%'
  ]
]

*/

function findCharPosition(mazeMatrix, char) {
  for (let i = 0; i < mazeMatrix.length; i++) {
    let currentElement = mazeMatrix[i];
    for (let j = 0; j < currentElement.length; j++) {
      if (currentElement[j] === char) {
        return [i, j];
      }
    }
  }
}

let entrancePosition = findCharPosition(mazeMatrix, "e");
//position of e in mazeMatrix is :  [ 0, 1 ]    ([row, column])

let exitPosition = findCharPosition(mazeMatrix, "x");
// position of e in mazeMatrix is :  [ 6, 9 ]   ([row, column])

function printMatrix(mazeMatrix) {
  for (let i = 0; i < mazeMatrix.length; i++) {
    let currentElement = mazeMatrix[i];
    let row = "";
    for (let j = 0; j < currentElement.length; j++) {
      row += currentElement[j] + " ";
    }
    console.log(row);
  }
  console.log("\n");
}

function mazePathFinder(mazeMatrix) {
  let row = mazeMatrix.length,
    column = mazeMatrix[0].length,
    startPosition = findCharPosition(mazeMatrix, "e"),
    endPosition = findCharPosition(mazeMatrix, "x");

  path(startPosition[0], startPosition[1]);

  function path(x, y) {
    if (x > row - 1 || y > column - 1 || x < 0 || y < 0) {
      return false;
    }

    //if position found
    if (x == endPosition[0] && y == endPosition[1]) {
      return true;
    }

    //escape the path
    if (mazeMatrix[x][y] == "%" || mazeMatrix[x][y] == "+") {
      return false;
    }

    //mark the current spot
    mazeMatrix[x][y] = "+";
    printMatrix(mazeMatrix);

    //call recursively
    if (path(x, y - 1) || path(x + 1, y) || path(x, y + 1) || path(x - 1, y)) {
      return true;
    }

    mazeMatrix[x][y] = ".";
    return false;
  }
}

mazePathFinder(mazeMatrix);

/*

% + % % % % % % % % % 
% . . . % . % . . . % 
% . % . % . % . % % % 
% . % . . . . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + . . % . % . . . % 
% . % . % . % . % % % 
% . % . . . . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + . . % . % . . . % 
% + % . % . % . % % % 
% . % . . . . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + . . % . % . . . % 
% + % . % . % . % % % 
% + % . . . . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + . . % . % . . . % 
% + % . % . % . % % % 
% + % . . . . . . . % 
% + % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + . . % . % . . . % 
% + % . % . % . % % % 
% + % . . . . . . . % 
% + % % % % . % % . % 
% + % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + . % . % . . . % 
% . % . % . % . % % % 
% . % . . . . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % . % . % . % % % 
% . % . . . . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % . . . . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + . . . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + . . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + . . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + . . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + . . . % 
% . % % % % + % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + . . . % 
% . % % % % + % % . % 
% . % . . . + . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + . . . % 
% . % % % % + % % . % 
% . % . . + + . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + . . . % 
% . % % % % + % % . % 
% . % . + + + . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + . . . % 
% . % % % % + % % . % 
% . % + + + + . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + . . . % 
% . % % % % + % % . % 
% . % . . . + + % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + + . . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + + + . % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + + + + % 
% . % % % % . % % . % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + + + + % 
% . % % % % . % % + % 
% . % . . . . . % . % 
% % % % % % % % % x % 


% + % % % % % % % % % 
% + + + % . % . . . % 
% . % + % . % . % % % 
% . % + + + + + + + % 
% . % % % % . % % + % 
% . % . . . . . % + % 
% % % % % % % % % x % 


*/
